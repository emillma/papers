import numpy as np


munsell = np.array(
    [
        [201, 130, 134],
        [201, 130, 127],
        [201, 131, 118],
        [200, 133, 109],
        [197, 135, 100],
        [193, 137, 94],
        [187, 140, 86],
        [181, 143, 79],
        [173, 146, 75],
        [167, 149, 72],
        [160, 151, 73],
        [151, 154, 78],
        [141, 156, 85],
        [127, 159, 98],
        [115, 160, 110],
        [101, 162, 124],
        [92, 163, 134],
        [87, 163, 141],
        [82, 163, 148],
        [78, 163, 154],
        [73, 163, 162],
        [70, 162, 170],
        [70, 161, 177],
        [73, 160, 184],
        [82, 158, 189],
        [93, 156, 193],
        [104, 154, 195],
        [117, 151, 197],
        [128, 149, 198],
        [141, 145, 198],
        [152, 142, 196],
        [160, 140, 193],
        [168, 138, 189],
        [177, 135, 182],
        [183, 134, 176],
        [188, 132, 169],
        [193, 131, 160],
        [196, 130, 153],
        [198, 130, 146],
        [200, 130, 140],
        [201, 130, 134],
    ],
    dtype=float,
)
munsell /= (munsell @ [0.2126, 0.7152, 0.0722])[:, None]
munsell /= munsell.max()


def get_color(aolp: np.ndarray, dolp: np.ndarray):
    aolp = aolp % 1
    n = munsell.shape[0]
    idx0 = (np.floor(aolp * n)).astype(np.int64) % n
    v0 = munsell[idx0]
    v1 = munsell[(idx0 + 1) % n]
    reminder = (aolp * n - idx0)[..., None]
    return (v0 * (1 - reminder) + v1 * reminder) * dolp[..., None]
