@online{babinAnalysisRobustFunctions2018,
  title = {Analysis of {{Robust Functions}} for {{Registration Algorithms}}},
  author = {Babin, Philippe and Giguère, Philippe and Pomerleau, François},
  date = {2018-10-02},
  eprint = {1810.01474},
  eprinttype = {arXiv},
  eprintclass = {cs},
  url = {http://arxiv.org/abs/1810.01474},
  urldate = {2024-10-02},
  abstract = {Registration accuracy is influenced by the presence of outliers and numerous robust solutions have been developed over the years to mitigate their effect. However, without a large scale comparison of solutions to filter outliers, it is becoming tedious to select an appropriate algorithm for a given application. This paper presents a comprehensive analyses of the effects of outlier filters on the ICP algorithm aimed at mobile robotic application. Fourteen of the most common outlier filters (such as M-estimators) have been tested in different types of environments, for a total of more than two million registrations. Furthermore, the influence of tuning parameters have been thoroughly explored. The experimental results show that most outlier filters have similar performance if they are correctly tuned. Nonetheless, filters such as Var. Trim., Cauchy, and Cauchy MAD are more stable against different environment types. Interestingly, the simple norm L1 produces comparable accuracy, while been parameterless.},
  pubstate = {prepublished},
  keywords = {Computer Science - Robotics},
  file = {C\:\\Users\\emilm\\Zotero\\storage\\IVPBSXRF\\Babin et al_2018_Analysis of Robust Functions for Registration Algorithms.pdf;C\:\\Users\\emilm\\Zotero\\storage\\SAMVZ6TX\\1810.html}
}

@incollection{hutchisonBundleAdjustmentLarge2010,
  title = {Bundle {{Adjustment}} in the {{Large}}},
  booktitle = {Computer {{Vision}} – {{ECCV}} 2010},
  author = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y. and Weikum, Gerhard and Agarwal, Sameer and Snavely, Noah and Seitz, Steven M. and Szeliski, Richard},
  editor = {Daniilidis, Kostas and Maragos, Petros and Paragios, Nikos},
  date = {2010},
  volume = {6312},
  pages = {29--42},
  publisher = {Springer Berlin Heidelberg},
  location = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-15552-9_3},
  url = {http://link.springer.com/10.1007/978-3-642-15552-9_3},
  urldate = {2024-11-12},
  abstract = {We present the design and implementation of a new inexact Newton type algorithm for solving large-scale bundle adjustment problems with tens of thousands of images. We explore the use of Conjugate Gradients for calculating the Newton step and its performance as a function of some simple and computationally efficient preconditioners. We show that the common Schur complement trick is not limited to factorization-based methods and that it can be interpreted as a form of preconditioning. Using photos from a street-side dataset and several community photo collections, we generate a variety of bundle adjustment problems and use them to evaluate the performance of six different bundle adjustment algorithms. Our experiments show that truncated Newton methods, when paired with relatively simple preconditioners, offer state of the art performance for large-scale bundle adjustment. The code, test problems and detailed performance data are available at http://grail.cs.washington.edu/projects/bal.},
  isbn = {978-3-642-15551-2 978-3-642-15552-9},
  langid = {english},
  file = {C:\Users\emilm\Zotero\storage\R4JBZD9I\Hutchison et al. - 2010 - Bundle Adjustment in the Large.pdf}
}

@article{kaessISAM2IncrementalSmoothing2012,
  title = {{{iSAM2}}: {{Incremental}} Smoothing and Mapping Using the {{Bayes}} Tree},
  shorttitle = {{{iSAM2}}},
  author = {Kaess, Michael and Johannsson, Hordur and Roberts, Richard and Ila, Viorela and Leonard, John J and Dellaert, Frank},
  date = {2012-02},
  journaltitle = {The International Journal of Robotics Research},
  shortjournal = {The International Journal of Robotics Research},
  volume = {31},
  number = {2},
  pages = {216--235},
  issn = {0278-3649, 1741-3176},
  doi = {10.1177/0278364911430419},
  url = {https://journals.sagepub.com/doi/10.1177/0278364911430419},
  urldate = {2024-11-14},
  abstract = {We present a novel data structure, the Bayes tree, that provides an algorithmic foundation enabling a better understanding of existing graphical model inference algorithms and their connection to sparse matrix factorization methods. Similar to a clique tree, a Bayes tree encodes a factored probability density, but unlike the clique tree it is directed and maps more naturally to the square root information matrix of the simultaneous localization and mapping (SLAM) problem. In this paper, we highlight three insights provided by our new data structure. First, the Bayes tree provides a better understanding of the matrix factorization in terms of probability densities. Second, we show how the fairly abstract updates to a matrix factorization translate to a simple editing of the Bayes tree and its conditional densities. Third, we apply the Bayes tree to obtain a completely novel algorithm for sparse nonlinear incremental optimization, named iSAM2, which achieves improvements in efficiency through incremental variable re-ordering and fluid relinearization, eliminating the need for periodic batch steps. We analyze various properties of iSAM2 in detail, and show on a range of real and simulated datasets that our algorithm compares favorably with other recent mapping algorithms in both quality and efficiency.},
  langid = {english},
  file = {C:\Users\emilm\Zotero\storage\EESZKNAR\Kaess et al. - 2012 - iSAM2 Incremental smoothing and mapping using the.pdf}
}

@article{lakshminarasimhanBricksHighperformancePortability2024,
  title = {Bricks: {{A}} High-Performance Portability Layer for Computations on Block-Structured Grids},
  shorttitle = {Bricks},
  author = {Lakshminarasimhan, Mahesh and Antepara, Oscar and Zhao, Tuowen and Sepanski, Benjamin and Basu, Protonu and Johansen, Hans and Hall, Mary and Williams, Samuel},
  date = {2024-11-01},
  journaltitle = {The International Journal of High Performance Computing Applications},
  volume = {38},
  number = {6},
  pages = {549--567},
  publisher = {SAGE Publications Ltd STM},
  issn = {1094-3420},
  doi = {10.1177/10943420241268288},
  url = {https://doi.org/10.1177/10943420241268288},
  urldate = {2024-11-19},
  abstract = {From partial differential equations to the convolutional neural networks in deep learning, to matrix operations in dense linear algebra, computations on structured grids dominate high-performance computing and machine learning. The performance of such computations is key to effective utilization of the billions of US dollar’s worth of GPU-accelerated systems such computations are run on. Concurrently, the end of Moore’s law and Dennard scaling are driving the specialization of compute and memory architectures. This specialization often makes performance brittle (small changes in function can have severe ramifications on performance), non-portable (vendors are increasingly motivated to develop their programming models tailored for their specialized architectures), and not performance portable (even a given computation may perform very differently from one architecture to the next). The mismatch between computations that reference data that is logically neighboring in N-dimensional space but physically distant in memory motivated the creation of Bricks — a novel data-structure transformation for multi-dimensional structured grids that reorders data into small, fixed-sized bricks of contiguously-packed data. Whereas a cache-line naturally captures spatial locality in only one dimension of a structured grid, Bricks can capture spatial locality in three or more dimensions. When coupled with a Python interface, a code-generator, and autotuning, the resultant BrickLib software provides not only raw performance, but also performance portability across multiple CPUs and GPUs, scalability in distributed memory, user productivity, and generality across computational domains. In this paper, we provide an overview of BrickLib and provide a series of vignettes on how it delivers on the aforementioned metrics.},
  langid = {english},
  file = {C:\Users\emilm\Zotero\storage\NRCTWY9N\Lakshminarasimhan et al_2024_Bricks.pdf}
}

@online{laueEquivalenceAutomaticSymbolic2022,
  title = {On the {{Equivalence}} of {{Automatic}} and {{Symbolic Differentiation}}},
  author = {Laue, Soeren},
  date = {2022-12-05},
  eprint = {1904.02990},
  eprinttype = {arXiv},
  doi = {10.48550/arXiv.1904.02990},
  url = {http://arxiv.org/abs/1904.02990},
  urldate = {2024-11-13},
  abstract = {We show that reverse mode automatic differentiation and symbolic differentiation are equivalent in the sense that they both perform the same operations when computing derivatives. This is in stark contrast to the common claim that they are substantially different. The difference is often illustrated by claiming that symbolic differentiation suffers from "expression swell" whereas automatic differentiation does not. Here, we show that this statement is not true. "Expression swell" refers to the phenomenon of a much larger representation of the derivative as opposed to the representation of the original function.},
  pubstate = {prepublished},
  keywords = {Computer Science - Machine Learning,Computer Science - Symbolic Computation},
  file = {C\:\\Users\\emilm\\Zotero\\storage\\QM2GFT6A\\Laue_2022_On the Equivalence of Automatic and Symbolic Differentiation.pdf;C\:\\Users\\emilm\\Zotero\\storage\\7B9XZ3V8\\1904.html}
}

@article{leisersonTheresPlentyRoom2020,
  title = {There’s Plenty of Room at the {{Top}}: {{What}} Will Drive Computer Performance after {{Moore}}’s Law?},
  shorttitle = {There’s Plenty of Room at the {{Top}}},
  author = {Leiserson, Charles E. and Thompson, Neil C. and Emer, Joel S. and Kuszmaul, Bradley C. and Lampson, Butler W. and Sanchez, Daniel and Schardl, Tao B.},
  date = {2020-06-05},
  journaltitle = {Science},
  volume = {368},
  number = {6495},
  pages = {eaam9744},
  publisher = {American Association for the Advancement of Science},
  doi = {10.1126/science.aam9744},
  url = {https://www.science.org/doi/full/10.1126/science.aam9744},
  urldate = {2024-11-13},
  abstract = {The miniaturization of semiconductor transistors has driven the growth in computer performance for more than 50 years. As miniaturization approaches its limits, bringing an end to Moore’s law, performance gains will need to come from software, algorithms, and hardware. We refer to these technologies as the “Top” of the computing stack to distinguish them from the traditional technologies at the “Bottom”: semiconductor physics and silicon-fabrication technology. In the post-Moore era, the Top will provide substantial performance gains, but these gains will be opportunistic, uneven, and sporadic, and they will suffer from the law of diminishing returns. Big system components offer a promising context for tackling the challenges of working at the Top.},
  file = {C:\Users\emilm\Zotero\storage\MIMZX3JB\Leiserson et al_2020_There’s plenty of room at the Top.pdf}
}

@online{martirosSymForceSymbolicComputation2022a,
  title = {{{SymForce}}: {{Symbolic Computation}} and {{Code Generation}} for {{Robotics}}},
  shorttitle = {{{SymForce}}},
  author = {Martiros, Hayk and Miller, Aaron and Bucki, Nathan and Solliday, Bradley and Kennedy, Ryan and Zhu, Jack and Dang, Tung and Pattison, Dominic and Zheng, Harrison and Tomic, Teo and Henry, Peter and Cross, Gareth and VanderMey, Josiah and Sun, Alvin and Wang, Samuel and Holtz, Kristen},
  date = {2022-05-06},
  eprint = {2204.07889},
  eprinttype = {arXiv},
  url = {http://arxiv.org/abs/2204.07889},
  urldate = {2024-11-12},
  abstract = {We present SymForce, a library for fast symbolic computation, code generation, and nonlinear optimization for robotics applications like computer vision, motion planning, and controls. SymForce combines the development speed and flexibility of symbolic math with the performance of autogenerated, highly optimized code in C++ or any target runtime language. SymForce provides geometry and camera types, Lie group operations, and branchless singularity handling for creating and analyzing complex symbolic expressions in Python, built on top of SymPy. Generated functions can be integrated as factors into our tangent-space nonlinear optimizer, which is highly optimized for real-time production use. We introduce novel methods to automatically compute tangent-space Jacobians, eliminating the need for bug-prone handwritten derivatives. This workflow enables faster runtime code, faster development time, and fewer lines of handwritten code versus the state-of-the-art. Our experiments demonstrate that our approach can yield order of magnitude speedups on computational tasks core to robotics. Code is available at https://github.com/symforce-org/symforce.},
  pubstate = {prepublished},
  keywords = {Computer Science - Computer Vision and Pattern Recognition,Computer Science - Robotics,Computer Science - Symbolic Computation},
  file = {C\:\\Users\\emilm\\Zotero\\storage\\6FPNFK6K\\Martiros et al_2022_SymForce.pdf;C\:\\Users\\emilm\\Zotero\\storage\\U6SIYAUJ\\2204.html}
}

@article{meurantReviewInverseSymmetric1992,
  title = {A {{Review}} on the {{Inverse}} of {{Symmetric Tridiagonal}} and {{Block Tridiagonal Matrices}}},
  author = {Meurant, Gérard},
  date = {1992-07-01},
  journaltitle = {Siam Journal on Matrix Analysis and Applications - SIAM J MATRIX ANAL APPLICAT},
  shortjournal = {Siam Journal on Matrix Analysis and Applications - SIAM J MATRIX ANAL APPLICAT},
  volume = {13},
  doi = {10.1137/0613045},
  abstract = {In this paper some results are reviewed concerning the characterization of inverses of symmetric tridiagonal and block tridiagonal matrices as well as results concerning the decay of the elements of the inverses. These results are obtained by relating the elements of inverses to elements of the Cholesky decompositions of these matrices. This gives explicit formulas for the elements of the inverse and gives rise to stable algorithms to compute them. These expressions also lead to bounds for the decay of the elements of the inverse for problems arising from discretization schemes.},
  file = {C:\Users\emilm\Zotero\storage\KSDMDYZJ\Meurant_1992_A Review on the Inverse of Symmetric Tridiagonal and Block Tridiagonal Matrices.pdf}
}

@inproceedings{rawatAssociativeInstructionReordering2018,
  title = {Associative {{Instruction Reordering}} to {{Alleviate Register Pressure}}},
  booktitle = {{{SC18}}: {{International Conference}} for {{High Performance Computing}}, {{Networking}}, {{Storage}} and {{Analysis}}},
  author = {Rawat, Prashant Singh and Sukumaran-Rajam, Aravind and Rountev, Atanas and Rastello, Fabrice and Pouchet, Louis-Noel and Sadayappan, P.},
  date = {2018-11},
  pages = {590--602},
  publisher = {IEEE},
  location = {Dallas, TX, USA},
  doi = {10.1109/SC.2018.00049},
  url = {https://ieeexplore.ieee.org/document/8665800/},
  urldate = {2024-11-19},
  eventtitle = {{{SC18}}: {{International Conference}} for {{High Performance Computing}}, {{Networking}}, {{Storage}} and {{Analysis}}},
  isbn = {978-1-5386-8384-2},
  langid = {english},
  file = {C:\Users\emilm\Zotero\storage\WGGUX749\Rawat et al. - 2018 - Associative Instruction Reordering to Alleviate Re.pdf}
}

@online{solaMicroLieTheory2021,
  title = {A Micro {{Lie}} Theory for State Estimation in Robotics},
  author = {Solà, Joan and Deray, Jeremie and Atchuthan, Dinesh},
  date = {2021-12-08},
  eprint = {1812.01537},
  eprinttype = {arXiv},
  eprintclass = {cs},
  url = {http://arxiv.org/abs/1812.01537},
  urldate = {2022-10-26},
  abstract = {A Lie group is an old mathematical abstract object dating back to the XIX century, when mathematician Sophus Lie laid the foundations of the theory of continuous transformation groups. As it often happens, its usage has spread over diverse areas of science and technology many years later. In robotics, we are recently experiencing an important trend in its usage, at least in the fields of estimation, and particularly in motion estimation for navigation. Yet for a vast majority of roboticians, Lie groups are highly abstract constructions and therefore difficult to understand and to use. This may be due to the fact that most of the literature on Lie theory is written by and for mathematicians and physicists, who might be more used than us to the deep abstractions this theory deals with. In estimation for robotics it is often not necessary to exploit the full capacity of the theory, and therefore an effort of selection of materials is required. In this paper, we will walk through the most basic principles of the Lie theory, with the aim of conveying clear and useful ideas, and leave a significant corpus of the Lie theory behind. Even with this mutilation, the material included here has proven to be extremely useful in modern estimation algorithms for robotics, especially in the fields of SLAM, visual odometry, and the like. Alongside this micro Lie theory, we provide a chapter with a few application examples, and a vast reference of formulas for the major Lie groups used in robotics, including most jacobian matrices and the way to easily manipulate them. We also present a new C++ template-only library implementing all the functionality described here.},
  pubstate = {prepublished},
  keywords = {Computer Science - Robotics,lie},
  file = {C\:\\Users\\emilm\\Zotero\\storage\\IJ8GE9ZH\\Solà et al. - 2021 - A micro Lie theory for state estimation in robotic.pdf;C\:\\Users\\emilm\\Zotero\\storage\\M4UPB22V\\1812.html}
}

@inproceedings{wuMulticoreBundleAdjustment2011,
  title = {Multicore Bundle Adjustment},
  booktitle = {{{CVPR}} 2011},
  author = {Wu, Changchang and Agarwal, Sameer and Curless, Brian and Seitz, Steven M.},
  date = {2011-06},
  pages = {3057--3064},
  publisher = {IEEE},
  location = {Colorado Springs, CO, USA},
  doi = {10.1109/CVPR.2011.5995552},
  url = {http://ieeexplore.ieee.org/document/5995552/},
  urldate = {2024-11-13},
  abstract = {We present the design and implementation of new inexact Newton type Bundle Adjustment algorithms that exploit hardware parallelism for efficiently solving large scale 3D scene reconstruction problems. We explore the use of multicore CPU as well as multicore GPUs for this purpose. We show that overcoming the severe memory and bandwidth limitations of current generation GPUs not only leads to more space efficient algorithms, but also to surprising savings in runtime. Our CPU based system is up to ten times and our GPU based system is up to thirty times faster than the current state of the art methods [1], while maintaining comparable convergence behavior. The code and additional results are available at http://grail.cs. washington.edu/projects/mcba.},
  eventtitle = {2011 {{IEEE Conference}} on {{Computer Vision}} and {{Pattern Recognition}} ({{CVPR}})},
  isbn = {978-1-4577-0394-2},
  langid = {english},
  file = {C:\Users\emilm\Zotero\storage\4GAH7NEX\Wu et al. - 2011 - Multicore bundle adjustment.pdf}
}
